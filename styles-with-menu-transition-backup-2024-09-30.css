/* Connor Ward */
/* http://meyerweb.com/eric/tools/css/reset/
v2.0 | 20110126
License: none (public domain)
*/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup, 
menu, nav, output, ruby, section, summary,
time1, mark, audio, video {
    margin: 0;
    padding: 0;
    border: 0;
    font-size: 100%;
    font: inherit;
    vertical-align: baseline;
}
/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, 
footer, header, hgroup, menu, nav, section {
    display: block;
}
body {
    line-height: 1;
}
ol, ul {
    list-style: none;
}
blockquote, q {
    quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
    content: '';
    content: none;
}
table {
    border-collapse: collapse;
    border-spacing: 0;
}

/* End of CSS reset */

/* Additional resets */

button {
    border: none;
}

/* Allows modals to be up to 100% of viewport width and height in Chrome when using the Box Model Fix */

dialog:modal {
    max-width: 100vh;
    max-height: 100vh;
}

/* Box Model Fix / Border Box Fix */

html {
    box-sizing: border-box;
}

*, *:before, *:after {
    box-sizing: inherit;
}

/* Responsive images */

img {
    max-width: 100%;
}

/* --------- End of boilerplate CSS --------- */

@import url('https://fonts.googleapis.com/css2?family=Molle&family=Montserrat&display=swap');

:root {
    --yellow: #F6D64A;
    --teal: #55BCD5;
    --purple: #9B26B0;
    --blue: #499BD2;
    --dark-gray: #222222;
    --light-gray: #EAEAEA;
    --white: #ffffff;
    --black: #000000;
    --molle: "Molle", cursive, system-ui;
    --montserrat: "Montserrat", sans-serif, system-ui;
    --time1: 0.3s;
    --time2: 0.4s;
    --timing-function1: ease-in-out;
    --timing-function2: ease-out;
}

.sr-only {
    position: absolute;
    left: -10000px;
    top: auto;
    width: 1px;
    height: 1px;
    overflow: hidden;
}

/* Menu */

header {
    text-align: left;
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-template-areas:
    "logo menu"
    "heading heading"
    "p p";
    /* align-items: center; */
    /* justify-content: flex-start; */
    /* align-items: center; */
    /* justify-items: center; */
}

header a {
    grid-area: logo;
}

header nav {
    /* grid-area: menu; */
    text-align: center;
    position: absolute;
    /* width: 50%; */
    top: 2.625rem;
    right: 0;
    transition: right var(--time1) var(--timing-function1) var(--time2), transform var(--time1) var(--timing-function1) var(--time2);
    /* When the toggle goes from being checked to unchecked, there's a delay on the transition. So, there's a pause before the nav moves to the right, which gives time for the ul's max-height to collapse. */
    
}

nav:has(#toggle:checked) {
    position: absolute;
    z-index: 1;
    right: 50%;
    transform: translateX(50%);
    transition: right var(--time1) var(--timing-function1), transform var(--time1) var(--timing-function1);
    /* When the toggle is clicked and becomes checked, there's no delay on the transitions, so it immediately moves to the right. */

}

header p {
    grid-area: p;
}

header h1 {
    grid-area: heading;
}

#toggle {
    display: none;
}


#toggle ~ ul {
    /* display: none; */
    max-height: 0;
    overflow: hidden;
    transition: max-height var(--time2) var(--timing-function2);
    /* When the toggle goes from checked to unchecked, there's no delay on the transition, so the max-height immediately collapses. */
    
}


#toggle:checked ~ ul {
    /* display: block; */
    max-height: 450px;
    /* overflow: visible; */
    
    transition: max-height var(--time2) var(--timing-function2) var(--time1);
    /* When the toggle is clicked and becomes checked, there's a delay on the transition. So, there's a pause before the ul becomes full height, which gives time for the nav to move to the center of the viewport. */
}

/* #toggle:checked ~ label {
    width: 100%;
    text-align: center;
    background-color: var(--black);
} */

/* --------- End of menu --------- */


:is(header, #intro) :is(h1, h2, p), :is(#plan, #testimonials, #about, #contact) {
    /* Everything but #img-grid, menu, and footer. h1, h2, and p in header and #intro + the entirety of #plan, #testimonials, #about, and #contact) */
    padding: 0 2.375rem; /* 38px */
}

#img-grid img {
    width: 100%;
}

/* Start of typography */

body {
    line-height: 2rem;
}

h1 {
    font-size: 3.125rem; /* 50px */
}

h2, h3 {
    font-size: 2.5rem; /* 40px */
}

#plan h4 {
    font-size: 1.625rem; /* 26px */
}

#testimonials h4 {
    font-size: .875rem; /* 14px */
}

#about h4 {
    font-size: 1.25rem; /* 20px */
}

:is(header, #testimonials, #about) p {
    font-size: 1.25rem; /* 20px */
}

:is(#intro, footer) p {
    font-size: 1rem; /* 16px */
}

:is(h1, h2, h3) {
    font-family: var(--molle);
    font-weight: 400;
    font-style: italic;
}

:is(h4, p, q, small, nav, button, form) {
    font-family: var(--montserrat);
    font-optical-sizing: auto;
    font-weight: 400;
    font-style: normal;
}

/* --------- End of typography --------- */

#skip {
    font-family: var(--montserrat);
    background-color: var(--teal);
    color: var(--black);
    position: absolute;
    left: 50%;
    padding: .875rem;
    transform: translate(-50%, -100%);
    transition: transform 0.4s;
}
  
#skip a {
    text-decoration: underline;
}
  
#skip:focus-within {
    transform: translate(-50%, 0%);
}
